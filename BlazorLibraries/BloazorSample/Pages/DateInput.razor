@inject IJSRuntime JSRuntime;
@implements IDisposable;
<h3>DateInput</h3>
<input id="datepicker" />

@code{
    [Parameter]
    public DateTime DateTime { get; set; }
    [Parameter]
    public EventCallback<DateTime> DateTimeChanged { get; set; }

    [Parameter]
    public string ViewMode { get; set; }
    [Parameter]
    public EventCallback<string> ViewModeChanged { get; set; }

    IDisposable thisRef;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            thisRef = DotNetObjectReference.Create(this);
        }

        await JSRuntime.InvokeVoidAsync("blazorjs.datepicker", thisRef, ViewMode);
        await base.OnAfterRenderAsync(firstRender);
    }

    [JSInvokable]
    public async Task NotifyChange(int year, int month, int date)
    {
        DateTime = new DateTime(year, month, date);

        //await ViewModeChanged.InvokeAsync(ViewMode);
        await DateTimeChanged.InvokeAsync(DateTime);
    }

    void ParseToDate()
    {
    }

    void IDisposable.Dispose()
    {
        thisRef?.Dispose();
    }
}